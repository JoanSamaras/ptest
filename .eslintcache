[{"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\index.tsx":"1","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\reportWebVitals.ts":"2","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\App.tsx":"3","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\services\\index.ts":"4","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\components\\table\\index.tsx":"5","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\components\\row-column.ts":"6","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\components\\text.ts":"7","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\font-weights.ts":"8","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\font-colours.ts":"9","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\line-heights.ts":"10","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\font-sizes.ts":"11","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\colours.ts":"12","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\helpers\\css-utils.ts":"13","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\components\\table\\table-view.tsx":"14","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\components\\table\\styled-components.tsx":"15","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\spacings.ts":"16","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\border-sizes.ts":"17"},{"size":512,"mtime":1607794878804,"results":"18","hashOfConfig":"19"},{"size":493,"mtime":1607795862058,"results":"20","hashOfConfig":"19"},{"size":575,"mtime":1607807808224,"results":"21","hashOfConfig":"19"},{"size":796,"mtime":1607795467680,"results":"22","hashOfConfig":"19"},{"size":1730,"mtime":1607807846193,"results":"23","hashOfConfig":"19"},{"size":867,"mtime":1607797808868,"results":"24","hashOfConfig":"19"},{"size":960,"mtime":1607802050088,"results":"25","hashOfConfig":"19"},{"size":186,"mtime":1607799311012,"results":"26","hashOfConfig":"19"},{"size":230,"mtime":1602443491468,"results":"27","hashOfConfig":"19"},{"size":520,"mtime":1607799311012,"results":"28","hashOfConfig":"19"},{"size":367,"mtime":1602443882997,"results":"29","hashOfConfig":"19"},{"size":1559,"mtime":1607801935110,"results":"30","hashOfConfig":"19"},{"size":580,"mtime":1607802037823,"results":"31","hashOfConfig":"19"},{"size":1750,"mtime":1607807261870,"results":"32","hashOfConfig":"19"},{"size":1134,"mtime":1607808130521,"results":"33","hashOfConfig":"19"},{"size":515,"mtime":1607799311012,"results":"34","hashOfConfig":"19"},{"size":323,"mtime":1603308778867,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13t0y2s",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\index.tsx",[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\reportWebVitals.ts",[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\App.tsx",["73"],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\services\\index.ts",[],[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\components\\table\\index.tsx",["74","75"],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\components\\row-column.ts",[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\components\\text.ts",[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\font-weights.ts",[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\font-colours.ts",[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\line-heights.ts",[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\font-sizes.ts",[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\colours.ts",[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\helpers\\css-utils.ts",["76","77"],"import styled, { css } from 'styled-components';\r\n\r\nexport type Margins = {\r\n    top?: string\r\n    left?: string\r\n    right?: string\r\n    bottom?: string\r\n    padding?: string\r\n};\r\n\r\nexport const margins = ( p: Margins ) => css`\r\n    ${ p.top && css`\r\n        margin-top: ${ p.top }; \r\n    ` }\r\n    ${ p.left && css`\r\n        margin-left: ${ p.left }; \r\n    ` }\r\n    ${ p.right && css`\r\n        margin-right: ${ p.right }; \r\n    ` }\r\n    ${ p.bottom && css`\r\n        margin-bottom: ${ p.bottom }; \r\n    ` }\r\n    ${ p.padding && css`\r\n        padding: ${ p.padding }; \r\n    ` }\r\n`;","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\components\\table\\table-view.tsx",["78","79","80"],"import React from 'react';\r\nimport { Dictionary } from 'helpers/types';\r\nimport { Cell, TableWrapper, Thead, Tbody, Tfoot, FullWidthRow } from './styled-components';\r\nimport { Text } from 'components/text';\r\n\r\ntype Props = {\r\n    columnHeaders: string[]\r\n    displayedColumnHeaders?: Dictionary<string>\r\n    data: any[]\r\n}\r\n\r\nexport const StyledTable = ( p: Props ): JSX.Element => {\r\n    const {\r\n        columnHeaders,\r\n        displayedColumnHeaders,\r\n        data\r\n    } = p;\r\n    const cellWidth = columnHeaders.length ? 100 / columnHeaders.length : 0;\r\n\r\n    return (\r\n        <TableWrapper>\r\n            <Thead>\r\n                <FullWidthRow>\r\n                    { columnHeaders.map( header => (\r\n                        <Cell width={ cellWidth } key={ header }>\r\n                            <Text colour='extraDark' weight='bold'>\r\n                                { header }\r\n                            </Text>\r\n                        </Cell>\r\n                    ) ) }\r\n                </FullWidthRow>\r\n            </Thead>\r\n\r\n            <Tbody>\r\n                { data.map( d => (\r\n                    <FullWidthRow key={ JSON.stringify( d ) }>\r\n                        { columnHeaders.map( header => (\r\n                            <Cell width={ cellWidth } key={ `${ header }_${ cellWidth }` } withPaddingBottom>\r\n                                <Text>{ d[ header ] }</Text>\r\n                            </Cell>\r\n                        ) ) }\r\n                    </FullWidthRow>\r\n                ) ) }\r\n            </Tbody>\r\n\r\n            <Tfoot>\r\n                <FullWidthRow>\r\n                    <Cell width={ 100 }>Cats win!</Cell>\r\n                </FullWidthRow>\r\n            </Tfoot>\r\n\r\n        </TableWrapper>\r\n    );\r\n}; \r\n","C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\components\\table\\styled-components.tsx",[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\spacings.ts",[],"C:\\Users\\JSam\\Documents\\tests\\ptest\\src\\design-system\\border-sizes.ts",[],{"ruleId":"81","severity":1,"message":"82","line":6,"column":10,"nodeType":"83","messageId":"84","endLine":6,"endColumn":14},{"ruleId":"81","severity":1,"message":"85","line":15,"column":13,"nodeType":"83","messageId":"84","endLine":15,"endColumn":18},{"ruleId":"81","severity":1,"message":"86","line":16,"column":13,"nodeType":"83","messageId":"84","endLine":16,"endColumn":18},{"ruleId":"81","severity":1,"message":"87","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":11,"column":24,"nodeType":"90","messageId":"91","endLine":11,"endColumn":41},{"ruleId":"92","severity":1,"message":"93","line":9,"column":12,"nodeType":"94","messageId":"95","endLine":9,"endColumn":15,"suggestions":"96"},{"ruleId":"81","severity":1,"message":"97","line":15,"column":9,"nodeType":"83","messageId":"84","endLine":15,"endColumn":31},{"ruleId":"81","severity":1,"message":"98","line":16,"column":9,"nodeType":"83","messageId":"84","endLine":16,"endColumn":13},"@typescript-eslint/no-unused-vars","'Text' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'terms' is assigned a value but never used.","'styled' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["99","100"],"'displayedColumnHeaders' is assigned a value but never used.","'data' is assigned a value but never used.",{"messageId":"101","fix":"102","desc":"103"},{"messageId":"104","fix":"105","desc":"106"},"suggestUnknown",{"range":"107","text":"108"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"107","text":"109"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[315,318],"unknown","never"]